{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "NamePrefix": {
            "type": "String"
        },
        "virtualMachineSize": {
            "type": "String",
            "defaultValue": "Standard_DS1_v2",
            "allowedValues": [
                "Standard_DS1_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2"
            ]
        },
        "VmCount": {
            "defaultValue": 2,
            "type": "int"
        },
        "adminUsername": {
            "defaultValue": "localadmin",
            "type": "String"
        },
        "adminPassword": {
            "type": "SecureString"
        },
        "LocalBgpASN": {
            "defaultValue": "64540",
            "type": "String"
        },
        "RemoteBgpASN": {
            "defaultValue": "64530",
            "type": "String"
        },
        "RemoteBgpAddress": {
            "defaultValue": "10.100.255.2",
            "type": "String"
        },
        "RemoteGatewayIPAddress": {
            "defaultValue": "100.64.233.2",
            "type": "String"
        },
        "SharedKey": {
            "type": "SecureString"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "diagnosticsStorageAccountName": "[toLower(concat(parameters('NamePrefix'), '-diagnosticstor'))]",
        "vNet1Name": "[concat(parameters('NamePrefix'), '-vNet1')]",
        "vNet2Name": "[concat(parameters('NamePrefix'), '-vNet2')]",
        "vNet3Name": "[concat(parameters('NamePrefix'), '-vNet3')]",
        "localGatewayName": "[concat(parameters('NamePrefix'), '-localGw')]",
        "vnetGatewayName": "[concat(parameters('NamePrefix'), '-vnetGw')]",
        "connectionName": "[concat(parameters('NamePrefix'), '-S2SConnection')]",
        "publicIpAddressName": "[concat(parameters('NamePrefix'), '-pip-')]",
        "virtualMachineName1": "[concat(parameters('NamePrefix'), '-VM1-')]",
        "virtualMachineName2": "[concat(parameters('NamePrefix'), '-VM2-')]",
        "networkInterfaceName1": "[concat(parameters('NamePrefix'), '-nic1-')]",
        "networkInterfaceName2": "[concat(parameters('NamePrefix'), '-nic2-')]",
        "publicNicProps1": {
            "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vNet1Name')), '/subnets/subnet1')]"
            },
            "privateIPAllocationMethod": "Dynamic",
            "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(variables('publicIpAddressName'),0))]"
            }
        },
        "privateNicProps1": {
            "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vNet1Name')), '/subnets/subnet1')]"
            },
            "privateIPAllocationMethod": "Dynamic"
        },
        "publicNicProps2": {
            "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vNet2Name')), '/subnets/subnet1')]"
            },
            "privateIPAllocationMethod": "Dynamic",
            "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(variables('publicIpAddressName'),1))]"
            }
        },
        "privateNicProps2": {
            "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vNet2Name')), '/subnets/subnet1')]"
            },
            "privateIPAllocationMethod": "Dynamic"
        },
        "vNet1": {
            "addressSpacePrefix": "10.1.0.0/16",
            "subnetName": "subnet1",
            "subnetPrefix": "10.1.0.0/24"
        },
        "vNet2": {
            "addressSpacePrefix": "10.2.0.0/24",
            "subnetName": "subnet1",
            "subnetPrefix": "10.2.0.0/24"
        },
        "vNet3": {
            "addressSpacePrefix": "10.200.0.0/16",
            "subnetName": "subnet1",
            "subnetPrefix": "10.200.0.0/24",
            "gatewaySubnetName": "GatewaySubnet",
            "gatewaySubnetPrefix": "10.200.255.0/24"
        },
        "vNet1tovNet2PeeringName": "[concat(variables('vNet1Name'), '-', variables('vNet2Name'))]",
        "vNet2tovNet1PeeringName": "[concat(variables('vNet2Name'), '-', variables('vNet1Name'))]",
        "vNet3tovNet1PeeringName": "[concat(variables('vNet3Name'), '-', variables('vNet1Name'))]",
        "vNet3tovNet2PeeringName": "[concat(variables('vNet3Name'), '-', variables('vNet2Name'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "name": "[variables('diagnosticsStorageAccountName')]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "copy": {
                "name": "piploop",
                "count": 3
            },
            "sku": {
                "name": "Basic"
            },
            "name": "[concat(variables('publicIpAddressName'),copyIndex())]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet1Name')]",
            "apiVersion": "2018-11-01",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet1').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet1').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vNet1').subnetPrefix]"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('vNet1tovNet2PeeringName')]",
                    "apiVersion": "2018-11-01",
                    "location": "[parameters('location')]",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vNet2Name'))]"
                        }
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNet1Name'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNet2Name'))]"
                    ]
                },
                {
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('vNet3tovNet1PeeringName')]",
                    "apiVersion": "2018-11-01",
                    "location": "[parameters('location')]",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": true,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": true,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vNet3Name'))]"
                        }
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNet1Name'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNet3Name'))]",
                        "[resourceId('Microsoft.Network/connections', variables('connectionName'))]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet2Name')]",
            "apiVersion": "2018-11-01",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet2').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet2').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vNet2').subnetPrefix]"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('vNet2tovNet1PeeringName')]",
                    "apiVersion": "2018-11-01",
                    "location": "[parameters('location')]",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vNet1Name'))]"
                        }
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNet1Name'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNet2Name'))]"
                    ]
                },
                {
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('vNet3tovNet2PeeringName')]",
                    "apiVersion": "2018-11-01",
                    "location": "[parameters('location')]",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": true,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": true,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vNet3Name'))]"
                        }
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNet2Name'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNet3Name'))]",
                        "[resourceId('Microsoft.Network/connections', variables('connectionName'))]"
                    ]
                }

            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNet3Name')]",
            "apiVersion": "2018-11-01",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNet3').addressSpacePrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vNet3').subnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vNet3').subnetPrefix]"
                        }
                    },
                    {
                        "name": "[variables('vNet3').gatewaySubnetName]",
                        "properties": {
                            "addressPrefix": "[variables('vNet3').gatewaySubnetPrefix]"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('vNet3tovNet1PeeringName')]",
                    "apiVersion": "2018-11-01",
                    "location": "[parameters('location')]",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": true,
                        "allowGatewayTransit": true,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vNet1Name'))]"
                        }
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNet1Name'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNet3Name'))]",
                        "[resourceId('Microsoft.Network/connections', variables('connectionName'))]"
                    ]
                },
                {
                    "type": "virtualNetworkPeerings",
                    "name": "[variables('vNet3tovNet2PeeringName')]",
                    "apiVersion": "2018-11-01",
                    "location": "[parameters('location')]",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": true,
                        "allowGatewayTransit": true,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vNet2Name'))]"
                        }
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNet3Name'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vNet2Name'))]",
                        "[resourceId('Microsoft.Network/connections', variables('connectionName'))]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "apiVersion": "2015-06-15",
            "dependsOn": [],
            "location": "[parameters('location')]",
            "name": "[variables('localGatewayName')]",
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[concat(parameters('RemoteBgpAddress'),'/32')]"
                    ]
                },
                "gatewayIpAddress": "[parameters('RemoteGatewayIPAddress')]",
                "bgpSettings": {
                    "asn": "[parameters('RemoteBgpASN')]",
                    "bgpPeeringAddress": "[parameters('RemoteBgpAddress')]",
                    "peerWeight": 0
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "name": "[variables('vnetGatewayName')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "GwIpConfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(variables('publicIpAddressName'),2))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet3Name'),variables('vNet3').gatewaySubnetName)]"
                            }
                        }
                    }
                ],
                "sku": {
                    "name": "HighPerformance",
                    "tier": "HighPerformance",
                    "capacity": 2
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": true,
                "activeActive": false,
                "vpnClientConfiguration": {
                    "vpnClientRootCertificates": [],
                    "vpnClientRevokedCertificates": []
                },
                "bgpSettings": {
                    "asn": "[parameters('LocalBgpASN')]"
                }
            },
            "dependsOn": [
                "piploop",
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vNet3Name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/connections",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vnetGatewayName'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways',variables('localGatewayName'))]"
            ],
            "location": "[parameters('location')]",
            "name": "[variables('connectionName')]",
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('vnetGatewayName'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways',variables('localGatewayName'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 0,
                "sharedKey": "[parameters('SharedKey')]",
                "enableBgp": true,
                "connectionProtocol": "IKEv2"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "copy": {
                "name": "vnet1-nicloop",
                "count": "[parameters('VmCount')]"
            },
            "name": "[concat( variables('networkInterfaceName1'),copyIndex())]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": "[if ( equals(CopyIndex(),0)  ,variables('publicNicProps1'),variables('privateNicProps1'))]"
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vNet1Name'))]",
                "piploop"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "copy": {
                "name": "vnet2-nicloop",
                "count": "[parameters('VmCount')]"
            },
            "name": "[concat( variables('networkInterfaceName2'),copyIndex())]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": "[if ( equals(CopyIndex(),0)  ,variables('publicNicProps2'),variables('privateNicProps2'))]"
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vNet2Name'))]",
                "piploop"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "copy": {
                "name": "vbet1-vmloop",
                "count": "[parameters('VmCount')]"
            },
            "name": "[concat(variables('virtualMachineName1'),copyIndex())]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('virtualMachineName1'),copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName1'),copyIndex()))]"
                        }
                    ]
                },
                "licenseType": "Windows_Server",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('diagnosticsStorageAccountName'), '.blob.east.azurestack.contoso.com/')]"
                    }
                }
            },
            "dependsOn": [
                "vnet1-nicloop",
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "copy": {
                "name": "vbet2-vmloop",
                "count": "[parameters('VmCount')]"
            },
            "name": "[concat(variables('virtualMachineName2'),copyIndex())]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('virtualMachineName2'),copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName2'),copyIndex()))]"
                        }
                    ]
                },
                "licenseType": "Windows_Server",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('diagnosticsStorageAccountName'), '.blob.east.azurestack.contoso.com/')]"
                    }
                }
            },
            "dependsOn": [
                "vnet2-nicloop",
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]"
            ]
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}